/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2013-11-23 14:01:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class exit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\" />\r\n");
      out.write("<meta http-equiv=\"pragma\" content=\"no-cache\"/>\r\n");
      out.write("<meta http-equiv=\"cache-control\" content=\"no-cache\"/>\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\"/>   \r\n");
      out.write("<meta http-equiv=\"Refresh\" content=\"6000;URL=index.jsp\"> \r\n");
      out.write("<title>退出系统</title>\r\n");
      out.write("<style type=text/css>\r\n");
      out.write(" body{background-color:#F0E68C;}\r\n");
      out.write(" div{font:bold 38px 宋体;text-align:center;padding-top:260px; padding-left:420px; padding-right:400px;}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("window.onload = function () {\r\n");
      out.write("\tC = Math.cos; // cache Math objects\r\n");
      out.write("\tS = Math.sin;\r\n");
      out.write("\tU = 0;\r\n");
      out.write("\tw = window;\r\n");
      out.write("\tj = document;\r\n");
      out.write("\td = j.getElementById(\"c\");\r\n");
      out.write("\tc = d.getContext(\"2d\");\r\n");
      out.write("\tW = d.width = w.innerWidth;\r\n");
      out.write("\tH = d.height = w.innerHeight;\r\n");
      out.write("\tc.fillRect(0, 0, W, H); // resize <canvas> and draw black rect (default)\r\n");
      out.write("\tc.globalCompositeOperation = \"lighter\"; // switch to additive color application\r\n");
      out.write("\tc.lineWidth = 0.2;\r\n");
      out.write("\tc.lineCap = \"round\";\r\n");
      out.write("\tvar bool = 0, \r\n");
      out.write("\t\tt = 0; // theta\r\n");
      out.write("\td.onmousemove = function (e) {\r\n");
      out.write("\t\tif(window.T) {\r\n");
      out.write("\t\t\tif(D==9) { D=Math.random()*15; f(1); }\r\n");
      out.write("\t\t\tclearTimeout(T);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tX = e.pageX; // grab mouse pixel coords\r\n");
      out.write("\t\tY = e.pageY;\r\n");
      out.write("\t\ta=0; // previous coord.x\r\n");
      out.write("\t\tb=0; // previous coord.y \r\n");
      out.write("\t\tA = X, // original coord.x\r\n");
      out.write("\t\tB = Y; // original coord.y\r\n");
      out.write("\t\tR=(e.pageX/W * 999>>0)/999;\r\n");
      out.write("\t\tr=(e.pageY/H * 999>>0)/999;\r\n");
      out.write("\t\tU=e.pageX/H * 360 >>0;\r\n");
      out.write("\t\tD=9;\r\n");
      out.write("\t\tg = 360 * Math.PI / 180;\r\n");
      out.write("\t\tT = setInterval(f = function (e) { // start looping spectrum\r\n");
      out.write("\t\t\tc.save();\r\n");
      out.write("\t\t\tc.globalCompositeOperation = \"source-over\"; // switch to additive color application\r\n");
      out.write("\t\t\tif(e!=1) {\r\n");
      out.write("\t\t\t\tc.fillStyle = \"rgba(0,0,0,0.02)\";\r\n");
      out.write("\t\t\t\tc.fillRect(0, 0, W, H); // resize <canvas> and draw black rect (default)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tc.restore();\r\n");
      out.write("\t\t\ti = 25; while(i --) {\r\n");
      out.write("\t\t\t\tc.beginPath();\r\n");
      out.write("\t\t\t\tif(D > 450 || bool) { // decrease diameter\r\n");
      out.write("\t\t\t\t\tif(!bool) { // has hit maximum\r\n");
      out.write("\t\t\t\t\t\tbool = 1;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(D < 0.1) { // has hit minimum\r\n");
      out.write("\t\t\t\t\t\tbool = 0;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tt -= g; // decrease theta\r\n");
      out.write("\t\t\t\t\tD -= 0.1; // decrease size\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(!bool) {\r\n");
      out.write("\t\t\t\t\tt += g; // increase theta\r\n");
      out.write("\t\t\t\t\tD += 0.1; // increase size\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tq = (R / r - 1) * t; // create hypotrochoid from current mouse position, and setup variables (see: \r\n");
      out.write("\r\n");
      out.write("http://en.wikipedia.org/wiki/Hypotrochoid)\r\n");
      out.write("\t\t\t\tx = (R - r) * C(t) + D * C(q) + (A + (X - A) * (i / 25)) + (r - R); // center on xy coords\r\n");
      out.write("\t\t\t\ty = (R - r) * S(t) - D * S(q) + (B + (Y - B) * (i / 25));\r\n");
      out.write("\t\t\t\tif (a) { // draw once two points are set\r\n");
      out.write("\t\t\t\t\tc.moveTo(a, b);\r\n");
      out.write("\t\t\t\t\tc.lineTo(x, y)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tc.strokeStyle = \"hsla(\" + (U % 360) + \",100%,50%,0.75)\"; // draw rainbow hypotrochoid\r\n");
      out.write("\t\t\t\tc.stroke();\r\n");
      out.write("\t\t\t\ta = x; // set previous coord.x\r\n");
      out.write("\t\t\t\tb = y; // set previous coord.y\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tU -= 0.5; // increment hue\r\n");
      out.write("\t\t\tA = X; // set original coord.x\r\n");
      out.write("\t\t\tB = Y; // set original coord.y\r\n");
      out.write("\t\t}, 16);\r\n");
      out.write("\t}\r\n");
      out.write("\tj.onkeydown = function(e) { a=b=0; R += 0.05 }\r\n");
      out.write("\td.onmousemove({pageX:300, pageY:290})\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("</script> \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write(" ");
session.invalidate(); 
      out.write("\r\n");
      out.write(" <a href=\"index.jsp\"><canvas id=\"c\"></canvas></a>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
